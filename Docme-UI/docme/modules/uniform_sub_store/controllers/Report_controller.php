<?php

/**
 * Description of Report_controller
 *
 * @author aju.docme
 */
class Report_controller extends MX_Controller
{

    public function __construct()
    {
        parent::__construct();
        if (!(isLoggedin() == 1)) {
            if (strtolower(filter_input(INPUT_SERVER, 'HTTP_X_REQUESTED_WITH')) === 'xmlhttprequest') {
                header("HTTP/1.1 401 UNauthorized");
                die();
            } else {
                $path = base_url();
                redirect($path);
            }
        }
        $this->load->model('Report_model', 'MReport');
    }

    //Pre loaders

    public function get_preload_sale_return_data()
    {
        if ($this->input->is_ajax_request() == 1) {
            $data['sub_title'] = 'SALE RETURN REPORT';
            $report_date_lock = $this->MReport->report_lock_date();
            if (isset($report_date_lock['data_status']) && !empty($report_date_lock['data_status']) && $report_date_lock['data_status'] == 1)
                $data['report_lock_date'] = $report_date_lock['data'][0]['STORE_OPEN_LOCK_DATE'];
            else
                $data['report_lock_date'] = NULL;
            $this->load->view('report/preload/return_report', $data);
        } else {
            $this->load->view(ERROR_500);
        }
    }

    //Data loaders
    public function report_gen_sale_return_report_all()
    {
        if ($this->input->is_ajax_request() == 1) {
            $startdate = filter_input(INPUT_POST, 'startdate', FILTER_SANITIZE_STRING);
            $enddate = filter_input(INPUT_POST, 'enddate', FILTER_SANITIZE_STRING);
            $type = filter_input(INPUT_POST, 'type', FILTER_SANITIZE_STRING);
            $type_name = $this->get_type_name($type);
            if (isset($startdate) && !empty($startdate) && isset($enddate) && !empty($enddate)) {
                //                $store_id = $this->session->userdata('inst_id');
                $store_id = $this->session->userdata('store_id');;
                $report_data = $this->MReport->get_sale_return_report_all($startdate, $enddate, $store_id, $type);
                if (isset($report_data['data_status']) && !empty($report_data['data_status']) && $report_data['data_status'] == 1) {
                    $data['type_name'] = $type_name;
                    $data['type'] = $type;
                    $data['startdate'] = $startdate;
                    $data['enddate'] = $enddate;
                    $data['store_name'] = '';
                    $data['title'] = "UNIFORM STORE - SALE RETURN REPORT  ";
                    $data_header['title'] = "UNIFORM STORE - SALE RETURN REPORT  ";
                    $data['user_name'] = $this->session->userdata('user_name');
                    $data['report_data'] = $report_data['data'];
                    $html = $this->load->view('report/report_view/sale_return', $data, true); // render the view into HTML                    
                    $header_data = $this->load->view('report/report_view/header', $data_header, TRUE);
                    $header = '|' . $header_data . '|';
                    date_default_timezone_set('Asia/Kolkata');
                    $date = date('d-m-Y h:i:s');
                    $footer = '<div style="font-size:10px;font-weight: normal;">' . 'Docme -> Store -> Reports -> Sale Return Report. <br/> Printed on : ' . $date . '|{PAGENO}|' . '<div style="font-size:10px;font-weight: normal;">Generated By : ' . $data['user_name'] . '</div></div>';
                    $reportlink = $this->generate_pdf_report_stock_all($html, $data['user_name'], $header, $footer);
                    if ($reportlink) {
                        echo json_encode(array('status' => 1, 'link' => base_url("download/" . $reportlink)));
                        return true;
                    } else {
                        echo json_encode(array('status' => 3, 'message' => 'Report file generation failed. Please try again later'));
                        true;
                    }
                } else {
                    echo json_encode(array('status' => 3, 'message' => 'Report generation failed. Please try again later'));
                }
            } else {
                echo json_encode(array('status' => 2, 'message' => 'All mandatory fields are required'));
                return true;
            }
        } else {
            $this->load->view('template/error-500');
        }
    }

    private function generate_pdf_report_stock_all($report_html, $username, $header = '', $footer = '')
    {
        $filename_report = "reports/report_" . time() . ".pdf";
        $pdfFilePath = FCPATH . $filename_report;
        if (file_exists($pdfFilePath) == FALSE) {
            ini_set('memory_limit', '256M'); // boost the memory limit if it's low ;)
            ini_set("pcre.backtrack_limit", "10000000");
            $this->load->library('pdf');
            $pdf = $this->pdf->load();
            if (isset($header) && !empty($header)) {
                $pdf->setAutoTopMargin = 'stretch';
                $pdf->SetHeader($header);
            }
            if (isset($footer) && !empty($footer)) {
                $pdf->setAutoBottomMargin = 'stretch';
                $pdf->SetFooter($footer); // Add a footer for good measure ;)
            }
            $pdf->WriteHTML($report_html); // write the HTML into the PDF    
            $pdf->Output($pdfFilePath, \Mpdf\Output\Destination::FILE); // save to file 
            return $filename_report;
        } else {
            return false;
        }
    }



    //Pre loaders

    public function get_preload_sale_data()
    {
        if ($this->input->is_ajax_request() == 1) {
            $data['sub_title'] = 'SALE REPORT - VOUCHER WISE';
            $report_date_lock = $this->MReport->report_lock_date();
            if (isset($report_date_lock['data_status']) && !empty($report_date_lock['data_status']) && $report_date_lock['data_status'] == 1)
                $data['report_lock_date'] = $report_date_lock['data'][0]['STORE_OPEN_LOCK_DATE'];
            else
                $data['report_lock_date'] = NULL;
            $this->load->view('report/preload/sale_report', $data);
        } else {
            $this->load->view(ERROR_500);
        }
    }

    //Data loaders
    public function report_gen_sale_report_all()
    {
        if ($this->input->is_ajax_request() == 1) {
            $startdate = filter_input(INPUT_POST, 'startdate', FILTER_SANITIZE_STRING);
            $enddate = filter_input(INPUT_POST, 'enddate', FILTER_SANITIZE_STRING);

            if (isset($startdate) && !empty($startdate) && isset($enddate) && !empty($enddate)) {
                $store_id = $this->session->userdata('store_id');;
                $report_data = $this->MReport->get_sale_report_all($startdate, $enddate, $store_id);
                // dev_export($report_data);
                // die;
                if (isset($report_data['data_status']) && !empty($report_data['data_status']) && $report_data['data_status'] == 1) {
                    $data['startdate'] = $startdate;
                    $data['enddate'] = $enddate;
                    $data['store_name'] = '';
                    $data['title'] = "UNIFORM STORE - SALE  REPORT  ";
                    $data_header['title'] = "UNIFORM STORE - SALE  REPORT  ";
                    $data['user_name'] = $this->session->userdata('user_name');
                    $data['report_data'] = $report_data['data'];

                    $header_data = $this->load->view('report/report_view/header', $data_header, TRUE);
                    $header = '|' . $header_data . '|';
                    date_default_timezone_set('Asia/Kolkata');
                    $date = date('d-m-Y h:i:s');
                    $footer = '<div style="font-size:10px;font-weight: normal;">' . 'Docme -> Store -> Reports -> Sale Report. <br/> Printed on : ' . $date . '<div style="font-size:10px;font-weight: normal;">Generated By : ' . $data['user_name'] . '</div></div>';
                    $data['header'] = $header;
                    $data['footer'] = $footer;
                    $html = $this->load->view('report/report_view/sale_report', $data, true); // render the view into HTML



                    //                      $reportlink = $this->generate_pdf_report_sale_all($html, $data['user_name'], $header, $footer);
                    if ($html) {
                        //                        echo json_encode(array('status' => 1, 'link' => base_url("download/" . $reportlink)));
                        echo json_encode(array('status' => 1, 'link' => $html));
                        return true;
                    } else {
                        echo json_encode(array('status' => 3, 'message' => 'Report file generation failed. Please try again later'));
                        true;
                    }
                } else {
                    echo json_encode(array('status' => 3, 'message' => 'Report generation failed. Please try again later'));
                }
            } else {
                echo json_encode(array('status' => 2, 'message' => 'All mandatory fields are required'));
                return true;
            }
        } else {
            $this->load->view('template/error-500');
        }
    }

    //Pre loaders
    public function get_preload_sale_itemwise_data()
    {
        if ($this->input->is_ajax_request() == 1) {
            $data['sub_title'] = 'SALE REPORT - ITEM WISE';
            $report_date_lock = $this->MReport->report_lock_date();
            if (isset($report_date_lock['data_status']) && !empty($report_date_lock['data_status']) && $report_date_lock['data_status'] == 1)
                $data['report_lock_date'] = $report_date_lock['data'][0]['STORE_OPEN_LOCK_DATE'];
            else
                $data['report_lock_date'] = NULL;
            $this->load->view('report/preload/sale_report_item', $data);
        } else {
            $this->load->view(ERROR_500);
        }
    }

    //Data loaders
    public function report_gen_sale_itemwise_report_all()
    {
        if ($this->input->is_ajax_request() == 1) {
            $startdate = filter_input(INPUT_POST, 'startdate', FILTER_SANITIZE_STRING);
            $enddate = filter_input(INPUT_POST, 'enddate', FILTER_SANITIZE_STRING);
            $type = filter_input(INPUT_POST, 'type', FILTER_SANITIZE_STRING);
            $type_name = $this->get_type_name($type);
            if (isset($startdate) && !empty($startdate) && isset($enddate) && !empty($enddate)) {
                //                $store_id = $this->session->userdata('inst_id');
                $store_id = $this->session->userdata('store_id');;
                $report_data = $this->MReport->get_sale_itemwise_report_all($startdate, $enddate, $store_id, $type);
                //                dev_export($report_data);die;
                if (isset($report_data['data_status']) && !empty($report_data['data_status']) && $report_data['data_status'] == 1) {
                    $data['type_name'] = $type_name;
                    $data['type'] = $type;
                    $data['startdate'] = $startdate;
                    $data['enddate'] = $enddate;
                    $data['store_name'] = '';
                    $data['title'] = "UNIFORM STORE - SALE  REPORT ITEM WISE ";
                    $data_header['title'] = "UNIFORM STORE - SALE  REPORT ITEM WISE ";
                    $data['user_name'] = $this->session->userdata('user_name');
                    $data['report_data'] = $report_data['data'];
                    $html = $this->load->view('report/report_view/sale_report_item_wise', $data, true); // render the view into HTML                    
                    $header_data = $this->load->view('report/report_view/header', $data_header, TRUE);
                    $header = '|' . $header_data . '|';
                    date_default_timezone_set('Asia/Kolkata');
                    $date = date('d-m-Y h:i:s');
                    $footer = '<div style="font-size:10px;font-weight: normal;">' . 'Docme -> Store -> Reports -> Sale Report Item Wise. <br/> Printed on : ' . $date .  '<div style="font-size:10px;font-weight: normal;">Generated By : ' . $data['user_name'] . '</div></div>';
                    $reportlink = $this->generate_pdf_report_sale_all($html, $data['user_name'], $header, $footer);
                    if ($reportlink) {
                        echo json_encode(array('status' => 1, 'link' => base_url("download/" . $reportlink)));
                        return true;
                    } else {
                        echo json_encode(array('status' => 3, 'message' => 'Report file generation failed. Please try again later'));
                        true;
                    }
                } else {
                    echo json_encode(array('status' => 3, 'message' => 'Report generation failed. Please try again later'));
                }
            } else {
                echo json_encode(array('status' => 2, 'message' => 'All mandatory fields are required'));
                return true;
            }
        } else {
            $this->load->view('template/error-500');
        }
    }
    //Pre loaders
    public function get_preload_sale_itemwise_summary_data()
    {
        if ($this->input->is_ajax_request() == 1) {
            $data['sub_title'] = 'SALE REPORT - ITEM WISE SUMMARY REPORT';
            $report_date_lock = $this->MReport->report_lock_date();
            if (isset($report_date_lock['data_status']) && !empty($report_date_lock['data_status']) && $report_date_lock['data_status'] == 1)
                $data['report_lock_date'] = $report_date_lock['data'][0]['STORE_OPEN_LOCK_DATE'];
            else
                $data['report_lock_date'] = NULL;
            $this->load->view('report/preload/sale_report_item_summary', $data);
        } else {
            $this->load->view(ERROR_500);
        }
    }

    //Data loaders
    public function report_gen_sale_itemwise_summary_report_all()
    {
        if ($this->input->is_ajax_request() == 1) {
            $startdate = filter_input(INPUT_POST, 'startdate', FILTER_SANITIZE_STRING);
            $enddate = filter_input(INPUT_POST, 'enddate', FILTER_SANITIZE_STRING);
            $type = filter_input(INPUT_POST, 'type', FILTER_SANITIZE_STRING);
            $type_name = $this->get_type_name($type);
            if (isset($startdate) && !empty($startdate) && isset($enddate) && !empty($enddate)) {
                //                $store_id = $this->session->userdata('inst_id');
                $store_id = $this->session->userdata('store_id');;
                $report_data = $this->MReport->get_sale_itemwise_summary_report_all($startdate, $enddate, $store_id, $type);
                // dev_export($report_data);
                // die;
                if (isset($report_data['data_status']) && !empty($report_data['data_status']) && $report_data['data_status'] == 1) {
                    $data['type_name'] = $type_name;
                    $data['type'] = $type;
                    $data['startdate'] = $startdate;
                    $data['enddate'] = $enddate;
                    $data['store_name'] = '';
                    $data['title'] = "UNIFORM STORE - SALE  REPORT ITEM WISE SUMMARY REPORT ";
                    $data_header['title'] = "UNIFORM STORE - SALE  REPORT ITEM WISE SUMMARY REPORT";
                    $data['user_name'] = $this->session->userdata('user_name');
                    $data['report_data'] = $report_data['data'];
                    $html = $this->load->view('report/report_view/sale_report_item_summary', $data, true); // render the view into HTML       

                    $header_data = $this->load->view('report/report_view/header', $data_header, TRUE);
                    $header = '|' . $header_data . '|';
                    date_default_timezone_set('Asia/Kolkata');
                    $date = date('d-m-Y h:i:s');
                    $footer = '<div style="font-size:10px;font-weight: normal;">' . 'Docme -> Store -> Reports -> Sale Report Item Wise. <br/> Printed on : ' . $date . '|{PAGENO}|' . '<div style="font-size:10px;font-weight: normal;">Generated By : ' . $data['user_name'] . '</div></div>';
                    $reportlink = $this->generate_pdf_report_sale_all($html, $data['user_name'], $header, $footer);
                    if ($reportlink) {
                        echo json_encode(array('status' => 1, 'link' => base_url("download/" . $reportlink)));
                        return true;
                    } else {
                        echo json_encode(array('status' => 3, 'message' => 'Report file generation failed. Please try again later'));
                        true;
                    }
                } else {
                    echo json_encode(array('status' => 3, 'message' => 'Report generation failed. Please try again later'));
                }
            } else {
                echo json_encode(array('status' => 2, 'message' => 'All mandatory fields are required'));
                return true;
            }
        } else {
            $this->load->view('template/error-500');
        }
    }
    //Pre loaders
    public function get_preload_bbnd_data()
    {
        if ($this->input->is_ajax_request() == 1) {
            $data['sub_title'] = 'BILLED BUT NOT DELIVERED REPORT';
            $report_date_lock = $this->MReport->report_lock_date();
            if (isset($report_date_lock['data_status']) && !empty($report_date_lock['data_status']) && $report_date_lock['data_status'] == 1)
                $data['report_lock_date'] = $report_date_lock['data'][0]['STORE_OPEN_LOCK_DATE'];
            else
                $data['report_lock_date'] = NULL;
            $this->load->view('report/preload/billed_but_not_delivered', $data);
        } else {
            $this->load->view(ERROR_500);
        }
    }

    //Data loaders
    public function report_gen_bbnd_report_all()
    {
        if ($this->input->is_ajax_request() == 1) {
            $startdate = filter_input(INPUT_POST, 'startdate', FILTER_SANITIZE_STRING);
            $enddate = filter_input(INPUT_POST, 'enddate', FILTER_SANITIZE_STRING);

            if (isset($startdate) && !empty($startdate) && isset($enddate) && !empty($enddate)) {
                //                $store_id = $this->session->userdata('inst_id');
                $store_id = $this->session->userdata('store_id');;
                $report_data = $this->MReport->get_bbnd_report_all($startdate, $enddate, $store_id);
                //                dev_export($report_data);die;
                if (isset($report_data['data_status']) && !empty($report_data['data_status']) && $report_data['data_status'] == 1) {
                    $data['startdate'] = $startdate;
                    $data['enddate'] = $enddate;
                    $data['store_name'] = '';
                    $data['title'] = "UNIFORM STORE - BILLED BUT NOT DELIVERED ITEM WISE SUMMARY REPORT ";
                    $data_header['title'] = "UNIFORM STORE - BILLED BUT NOT DELIVERED ITEM WISE SUMMARY REPORT";
                    $data['user_name'] = $this->session->userdata('user_name');
                    $data['report_data'] = $report_data['data'];
                    $html = $this->load->view('report/report_view/sale_report_bbnd', $data, true); // render the view into HTML                    
                    $header_data = $this->load->view('report/report_view/header', $data_header, TRUE);
                    $header = '|' . $header_data . '|';
                    date_default_timezone_set('Asia/Kolkata');
                    $date = date('d-m-Y h:i:s');
                    $footer = '<div style="font-size:10px;font-weight: normal;">' . 'Docme -> Store -> Reports -> Billed but not delivered. <br/> Printed on : ' . $date .  '<div style="font-size:10px;font-weight: normal;">Generated By : ' . $data['user_name'] . '</div></div>';
                    $reportlink = $this->generate_pdf_report_sale_all($html, $data['user_name'], $header, $footer);
                    if ($reportlink) {
                        echo json_encode(array('status' => 1, 'link' => base_url("download/" . $reportlink)));
                        return true;
                    } else {
                        echo json_encode(array('status' => 3, 'message' => 'Report file generation failed. Please try again later'));
                        true;
                    }
                } else {
                    echo json_encode(array('status' => 3, 'message' => 'Report generation failed. Please try again later'));
                }
            } else {
                echo json_encode(array('status' => 2, 'message' => 'All mandatory fields are required'));
                return true;
            }
        } else {
            $this->load->view('template/error-500');
        }
    }



    private function generate_pdf_report_sale_all($report_html, $username, $header = '', $footer = '')
    {
        $filename_report = "reports/report_" . time() . ".pdf";
        $pdfFilePath = FCPATH . $filename_report;
        if (file_exists($pdfFilePath) == FALSE) {
            //            ini_set('memory_limit', '256M'); // boost the memory limit if it's low ;)
            ini_set("pcre.backtrack_limit", "1000000000000000");
            $this->load->library('pdf');
            $pdf = $this->pdf->load();
            if (isset($header) && !empty($header)) {
                $pdf->setAutoTopMargin = 'stretch';
                $pdf->SetHeader($header);
            }
            if (isset($footer) && !empty($footer)) {
                $pdf->setAutoBottomMargin = 'stretch';
                $pdf->SetFooter($footer); // Add a footer for good measure ;)
            }
            $pdf->WriteHTML($report_html); // write the HTML into the PDF    
            $pdf->Output($pdfFilePath, \Mpdf\Output\Destination::FILE); // save to file 
            return $filename_report;
        } else {
            return false;
        }
    }


    //Pre loaders
    public function get_preload_collection_data()
    {
        if ($this->input->is_ajax_request() == 1) {
            $data['sub_title'] = 'COLLECTION REPORT';
            $report_date_lock = $this->MReport->report_lock_date();
            if (isset($report_date_lock['data_status']) && !empty($report_date_lock['data_status']) && $report_date_lock['data_status'] == 1)
                $data['report_lock_date'] = $report_date_lock['data'][0]['STORE_OPEN_LOCK_DATE'];
            else
                $data['report_lock_date'] = NULL;
            $this->load->view('report/preload/collection_report', $data);
        } else {
            $this->load->view(ERROR_500);
        }
    }

    //Data loaders
    public function report_gen_collection_report_all()
    {
        if ($this->input->is_ajax_request() == 1) {
            $startdate = filter_input(INPUT_POST, 'startdate', FILTER_SANITIZE_STRING);
            $enddate = filter_input(INPUT_POST, 'enddate', FILTER_SANITIZE_STRING);

            if (isset($startdate) && !empty($startdate) && isset($enddate) && !empty($enddate)) {
                //                $store_id = $this->session->userdata('inst_id');
                $store_id = $this->session->userdata('store_id');;
                $report_data = $this->MReport->get_collection_report_all($startdate, $enddate, $store_id);
                //                dev_export($report_data);die;
                if (isset($report_data['data_status']) && !empty($report_data['data_status']) && $report_data['data_status'] == 1) {
                    $data['startdate'] = $startdate;
                    $data['enddate'] = $enddate;
                    $data['store_name'] = '';
                    $data['title'] = "UNIFORM STORE - COLLECTION REPORT ";
                    $data_header['title'] = "UNIFORM STORE - COLLECTION REPORT";
                    $data['user_name'] = $this->session->userdata('user_name');
                    $data['report_data'] = $report_data['data'];
                    $html = $this->load->view('report/report_view/collection', $data, true); // render the view into HTML                    
                    $header_data = $this->load->view('report/report_view/header', $data_header, TRUE);
                    $header = '|' . $header_data . '|';
                    date_default_timezone_set('Asia/Kolkata');
                    $date = date('d-m-Y h:i:s');
                    $footer = '<div style="font-size:10px;font-weight: normal;">' . 'Docme -> Store -> Reports -> Collection report <br/> Printed on : ' . $date . '|{PAGENO}|' . '<div style="font-size:10px;font-weight: normal;">Generated By : ' . $data['user_name'] . '</div></div>';
                    $reportlink = $this->generate_pdf_report_sale_all($html, $data['user_name'], $header, $footer);
                    if ($reportlink) {
                        echo json_encode(array('status' => 1, 'link' => base_url("download/" . $reportlink)));
                        return true;
                    } else {
                        echo json_encode(array('status' => 3, 'message' => 'Report file generation failed. Please try again later'));
                        true;
                    }
                } else {
                    echo json_encode(array('status' => 3, 'message' => 'Report generation failed. Please try again later'));
                }
            } else {
                echo json_encode(array('status' => 2, 'message' => 'All mandatory fields are required'));
                return true;
            }
        } else {
            $this->load->view('template/error-500');
        }
    }

    //Pre loaders Partial Payments
    public function get_preload_partial_collection_data()
    {
        if ($this->input->is_ajax_request() == 1) {
            $data['sub_title'] = 'PARTIAL COLLECTION REPORT';
            $report_date_lock = $this->MReport->report_lock_date();
            if (isset($report_date_lock['data_status']) && !empty($report_date_lock['data_status']) && $report_date_lock['data_status'] == 1)
                $data['report_lock_date'] = $report_date_lock['data'][0]['STORE_OPEN_LOCK_DATE'];
            else
                $data['report_lock_date'] = NULL;
            $this->load->view('report/preload/partial_collection_report', $data);
        } else {
            $this->load->view(ERROR_500);
        }
    }

    public function report_gen_partial_collection_all()
    {
        if ($this->input->is_ajax_request() == 1) {
            $startdate = filter_input(INPUT_POST, 'startdate', FILTER_SANITIZE_STRING);
            $enddate = filter_input(INPUT_POST, 'enddate', FILTER_SANITIZE_STRING);

            if (isset($startdate) && !empty($startdate) && isset($enddate) && !empty($enddate)) {
                //                $store_id = $this->session->userdata('inst_id');
                $store_id = $this->session->userdata('store_id');;
                $report_data = $this->MReport->get_collection_report_all($startdate, $enddate, $store_id, 'partial');
                //dev_export($report_data);die;
                if (isset($report_data['data_status']) && !empty($report_data['data_status']) && $report_data['data_status'] == 1) {
                    $data['startdate'] = $startdate;
                    $data['enddate'] = $enddate;
                    $data['store_name'] = '';
                    $data['title'] = "UNIFORM STORE - PARTIAL COLLECTION REPORT ";
                    $data_header['title'] = "UNIFORM STORE - PARTIAL COLLECTION REPORT";
                    $data['user_name'] = $this->session->userdata('user_name');
                    $data['report_data'] = $report_data['data'];
                    $html = $this->load->view('report/report_view/partial_collection', $data, true); // render the view into HTML                    
                    $header_data = $this->load->view('report/report_view/header', $data_header, TRUE);
                    $header = '|' . $header_data . '|';
                    date_default_timezone_set('Asia/Kolkata');
                    $date = date('d-m-Y h:i:s');
                    $footer = '<div style="font-size:10px;font-weight: normal;">' . 'Docme -> Store -> Reports -> Partial Collection report <br/> Printed on : ' . $date . '|{PAGENO}|' . '<div style="font-size:10px;font-weight: normal;">Generated By : ' . $data['user_name'] . '</div></div>';
                    $reportlink = $this->generate_pdf_report_sale_all($html, $data['user_name'], $header, $footer);
                    if ($reportlink) {
                        echo json_encode(array('status' => 1, 'link' => base_url("download/" . $reportlink)));
                        return true;
                    } else {
                        echo json_encode(array('status' => 3, 'message' => 'Report file generation failed. Please try again later'));
                        true;
                    }
                } else {
                    echo json_encode(array('status' => 3, 'message' => 'Report generation failed. Please try again later'));
                }
            } else {
                echo json_encode(array('status' => 2, 'message' => 'All mandatory fields are required'));
                return true;
            }
        } else {
            $this->load->view('template/error-500');
        }
    }

    //Pre loaders collection user wise
    public function get_preload_collection_data_user_wise()
    {
        if ($this->input->is_ajax_request() == 1) {
            $data['sub_title'] = 'COLLECTION REPORT - USER WISE';
            $report_date_lock = $this->MReport->report_lock_date();
            if (isset($report_date_lock['data_status']) && !empty($report_date_lock['data_status']) && $report_date_lock['data_status'] == 1)
                $data['report_lock_date'] = $report_date_lock['data'][0]['STORE_OPEN_LOCK_DATE'];
            else
                $data['report_lock_date'] = NULL;
            $this->load->view('report/preload/collection_report_user_wise', $data);
        } else {
            $this->load->view(ERROR_500);
        }
    }


    //Pre loaders summary collection user wise report
    public function get_preload_summary_collection_data_user_wise()
    {
        if ($this->input->is_ajax_request() == 1) {
            $data['sub_title'] = 'SUMMARY COLLECTION REPORT - USER WISE';
            $report_date_lock = $this->MReport->report_lock_date();
            if (isset($report_date_lock['data_status']) && !empty($report_date_lock['data_status']) && $report_date_lock['data_status'] == 1)
                $data['report_lock_date'] = $report_date_lock['data'][0]['STORE_OPEN_LOCK_DATE'];
            else
                $data['report_lock_date'] = NULL;
            $this->load->view('report/preload/summary_collection_report_user_wise', $data);
        } else {
            $this->load->view(ERROR_500);
        }
    }

    //Data loaders
    public function report_gen_collection_report_all_user_wise()
    {
        if ($this->input->is_ajax_request() == 1) {
            $startdate = filter_input(INPUT_POST, 'startdate', FILTER_SANITIZE_STRING);
            $enddate = filter_input(INPUT_POST, 'enddate', FILTER_SANITIZE_STRING);

            if (isset($startdate) && !empty($startdate) && isset($enddate) && !empty($enddate)) {
                //                $store_id = $this->session->userdata('inst_id');
                $store_id = $this->session->userdata('store_id');;
                $report_data = $this->MReport->get_collection_report_user_all($startdate, $enddate, $store_id);
                //                dev_export($report_data);die;
                if (isset($report_data['data_status']) && !empty($report_data['data_status']) && $report_data['data_status'] == 1) {
                    $data['startdate'] = $startdate;
                    $data['enddate'] = $enddate;
                    $data['store_name'] = '';
                    $data['title'] = "UNIFORM STORE - COLLECTION REPORT USER WISE ";
                    $data_header['title'] = "UNIFORM STORE - COLLECTION REPORT USER WISE";
                    $data['user_name'] = $this->session->userdata('user_name');
                    $data['report_data'] = $report_data['data'];
                    $html = $this->load->view('report/report_view/collection_userwise', $data, true); // render the view into HTML                    
                    $header_data = $this->load->view('report/report_view/header', $data_header, TRUE);
                    $header = '|' . $header_data . '|';
                    date_default_timezone_set('Asia/Kolkata');
                    $date = date('d-m-Y h:i:s');
                    $footer = '<div style="font-size:10px;font-weight: normal;">' . 'Docme -> Store -> Reports -> Collection report user wise <br/> Printed on : ' . $date . '|{PAGENO}|' . '<div style="font-size:10px;font-weight: normal;">Generated By : ' . $data['user_name'] . '</div></div>';
                    $reportlink = $this->generate_pdf_report_sale_all($html, $data['user_name'], $header, $footer);
                    if ($reportlink) {
                        echo json_encode(array('status' => 1, 'link' => base_url("download/" . $reportlink)));
                        return true;
                    } else {
                        echo json_encode(array('status' => 3, 'message' => 'Report file generation failed. Please try again later'));
                        true;
                    }
                } else {
                    echo json_encode(array('status' => 3, 'message' => 'Report generation failed. Please try again later'));
                }
            } else {
                echo json_encode(array('status' => 2, 'message' => 'All mandatory fields are required'));
                return true;
            }
        } else {
            $this->load->view('template/error-500');
        }
    }

    //Data loaders for summary collection report userwise
    public function report_gen_summary_collection_report_all_user_wise()
    {
        if ($this->input->is_ajax_request() == 1) {
            $startdate = filter_input(INPUT_POST, 'startdate', FILTER_SANITIZE_STRING);
            $enddate = filter_input(INPUT_POST, 'enddate', FILTER_SANITIZE_STRING);

            if (isset($startdate) && !empty($startdate) && isset($enddate) && !empty($enddate)) {
                //                $store_id = $this->session->userdata('inst_id');
                $store_id = $this->session->userdata('store_id');
                $report_data = $this->MReport->get_summary_collection_report_user_all($startdate, $enddate, $store_id);
                //dev_export($report_data);die;
                if (isset($report_data['data_status']) && !empty($report_data['data_status']) && $report_data['data_status'] == 1) {
                    $data['startdate'] = $startdate;
                    $data['enddate'] = $enddate;
                    $data['store_name'] = '';
                    $data['title'] = "UNIFORM STORE - SUMMARY COLLECTION REPORT USER WISE ";
                    $data_header['title'] = "UNIFORM STORE - SUMMARY COLLECTION REPORT USER WISE";
                    $data['user_name'] = $this->session->userdata('user_name');
                    $data['report_data'] = $report_data['data'];
                    $html = $this->load->view('report/report_view/summary_collection_userwise', $data, true); // render the view into HTML                    
                    //echo $html;exit;
                    $header_data = $this->load->view('report/report_view/header', $data_header, TRUE);
                    $header = '|' . $header_data . '|';
                    date_default_timezone_set('Asia/Kolkata');
                    $date = date('d-m-Y h:i:s');
                    $footer = '<div style="font-size:10px;font-weight: normal;">' . 'Docme -> Store -> Reports -> Summary collection report user wise <br/> Printed on : ' . $date . '|{PAGENO}|' . '<div style="font-size:10px;font-weight: normal;">Generated By : ' . $data['user_name'] . '</div></div>';
                    $reportlink = $this->generate_pdf_report_sale_all($html, $data['user_name'], $header, $footer);
                    if ($reportlink) {
                        echo json_encode(array('status' => 1, 'link' => base_url("download/" . $reportlink)));
                        return true;
                    } else {
                        echo json_encode(array('status' => 3, 'message' => 'Report file generation failed. Please try again later'));
                        true;
                    }
                } else {
                    echo json_encode(array('status' => 3, 'message' => 'Report generation failed. Please try again later'));
                }
            } else {
                echo json_encode(array('status' => 2, 'message' => 'All mandatory fields are required'));
                return true;
            }
        } else {
            $this->load->view('template/error-500');
        }
    }


    //Preload stock report detail


    public function report_stock_all_pre_load()
    {
        if ($this->input->is_ajax_request() == 1) {
            $data['sub_title'] = 'STOCK REPORT ';

            $report_date_lock = $this->MReport->report_lock_date();
            if (isset($report_date_lock['data_status']) && !empty($report_date_lock['data_status']) && $report_date_lock['data_status'] == 1)
                $data['report_lock_date'] = $report_date_lock['data'][0]['STORE_OPEN_LOCK_DATE'];
            else
                $data['report_lock_date'] = NULL;

            $this->load->view('report/preload/stock_report_detail', $data);
        } else {
            $this->load->view('template/error-500');
        }
    }



    //preload stock summary report

    public function report_stock_summary_pre_load()
    {
        if ($this->input->is_ajax_request() == 1) {
            $data['sub_title'] = 'STOCK REPORT ';

            $report_date_lock = $this->MReport->report_lock_date();
            if (isset($report_date_lock['data_status']) && !empty($report_date_lock['data_status']) && $report_date_lock['data_status'] == 1)
                $data['report_lock_date'] = $report_date_lock['data'][0]['STORE_OPEN_LOCK_DATE'];
            else
                $data['report_lock_date'] = NULL;
            $this->load->view('report/preload/stock_report_summary', $data);
        } else {
            $this->load->view('template/error-500');
        }
    }



    //Report generation for detail and summary


    //Report generation control
    public function report_gen_stock_report_all()
    {
        if ($this->input->is_ajax_request() == 1) {
            $startdate = filter_input(INPUT_POST, 'startdate', FILTER_SANITIZE_STRING);
            $enddate = filter_input(INPUT_POST, 'enddate', FILTER_SANITIZE_STRING);

            $store_id = $this->session->userdata('store_id');;
            $storename = $this->session->userdata('Institution_Name');;
            if (isset($startdate) && !empty($startdate) && isset($enddate) && !empty($enddate) && isset($store_id) && !empty($store_id)) {
                $report_data = $this->MReport->get_stock_report_all($startdate, $enddate, $store_id);
                //                dev_export($report_data);die;
                if (isset($report_data['data_status']) && !empty($report_data['data_status']) && $report_data['data_status'] == 1) {
                    $data['startdate'] = $startdate;
                    $data['enddate'] = $enddate;
                    $data['store_name'] = $storename;
                    $data['title'] = "UNIFORM STORE - STOCK REPORT (DETAIL) - " . $storename;
                    $data_header['title'] = "UNIFORM STORE - STOCK REPORT (DETAIL) - " . $storename;
                    $data['user_name'] = $this->session->userdata('user_name');
                    $data['report_data'] = $report_data['data'];
                    $html = $this->load->view('report/report_view/stock_all_report', $data, true); // render the view into HTML                    
                    $header_data = $this->load->view('report/report_view/header', $data_header, TRUE);
                    $header = '|' . $header_data . '|';
                    date_default_timezone_set('Asia/Kolkata');
                    $date = date('d-m-Y h:i:s');
                    $footer = '<div style="font-size:10px;font-weight: normal;">' . 'Docme -> Sub Store -> Reports -> Detailed Stock Report. <br/> Printed on : ' . $date . '|{PAGENO}|' . '<div style="font-size:10px;font-weight: normal;">Generated By : ' . $data['user_name'] . '</div></div>';
                    $reportlink = $this->generate_pdf_report_stock_all_substore($html, $data['user_name'], $header, $footer);

                    if ($reportlink) {
                        echo json_encode(array('status' => 1, 'link' => base_url("download/" . $reportlink)));
                        return true;
                    } else {
                        echo json_encode(array('status' => 3, 'message' => 'Report file generation failed. Please try again later'));
                        true;
                    }
                } else {
                    echo json_encode(array('status' => 3, 'message' => 'Report generation failed. Please try again later'));
                }
            } else {
                echo json_encode(array('status' => 2, 'message' => 'All mandatory fields are required'));
                return true;
            }
        } else {
            $this->load->view('template/error-500');
        }
    }

    public function report_gen_stock_report_summary()
    {
        if ($this->input->is_ajax_request() == 1) {
            $startdate = filter_input(INPUT_POST, 'startdate', FILTER_SANITIZE_STRING);
            $enddate = filter_input(INPUT_POST, 'enddate', FILTER_SANITIZE_STRING);
            $store_id = $this->session->userdata('store_id');;
            $storename = $this->session->userdata('Institution_Name');;
            if (isset($startdate) && !empty($startdate) && isset($enddate) && !empty($enddate) && isset($store_id) && !empty($store_id)) {
                $report_data = $this->MReport->get_stock_report_summary($startdate, $enddate, $store_id);
                if (isset($report_data['data_status']) && !empty($report_data['data_status']) && $report_data['data_status'] == 1 && isset($report_data['data']['formatted_data']) && !empty($report_data['data']['formatted_data']) && isset($report_data['data']['grand_total_data']) && !empty($report_data['data']['grand_total_data'])) {
                    $data['startdate'] = $startdate;
                    $data['enddate'] = $enddate;
                    $data['title'] = "UNIFORM STORE - STOCK REPORT (SUMMARY) - " . $storename;
                    $data['store_name'] = $storename;

                    $data['user_name'] = $this->session->userdata('user_name');
                    $data['report_data'] = $report_data['data']['formatted_data'];
                    $data['grand_total_data'] = $report_data['data']['grand_total_data'];

                    $data_header['title'] = "UNIFORM STORE - STOCK REPORT (SUMMARY) - " . $storename;
                    $header_data = $this->load->view('report/report_view/header', $data_header, TRUE);
                    $header = '|' . $header_data . '|';
                    date_default_timezone_set('Asia/Kolkata');
                    $date = date('d-m-Y h:i:s');
                    $footer = '<div style="font-size:10px;font-weight: normal;">' . 'Docme -> Main Store -> Reports -> Stock Summary Report. <br/> Printed on : ' . $date . '|{PAGENO}|' . '<div style="font-size:10px;font-weight: normal;">Generated By : ' . $data['user_name'] . '</div></div>';

                    $html = $this->load->view('report/report_view/stock_summary_report', $data, true); // render the view into HTML
                    //                    echo $html;die;
                    $reportlink = $this->generate_pdf_report_stock_all_substore($html, $data['user_name'], $header, $footer);
                    if ($reportlink) {
                        echo json_encode(array('status' => 1, 'link' => base_url("download/" . $reportlink)));
                        return true;
                    } else {
                        echo json_encode(array('status' => 3, 'message' => 'Report file generation failed. Please try again later'));
                        true;
                    }
                } else {
                    echo json_encode(array('status' => 3, 'message' => 'Report generation failed. Please try again later'));
                }
            } else {
                echo json_encode(array('status' => 2, 'message' => 'All mandatory fields are required'));
                return true;
            }
        } else {
            $this->load->view('template/error-500');
        }
    }






    private function generate_pdf_report_stock_all_substore($report_html, $username, $header = '', $footer = '')
    {
        $filename_report = "reports/report_" . time() . ".pdf";
        $pdfFilePath = FCPATH . $filename_report;
        if (file_exists($pdfFilePath) == FALSE) {
            ini_set('memory_limit', '256M'); // boost the memory limit if it's low ;)
            ini_set("pcre.backtrack_limit", "10000000");
            $this->load->library('pdf');
            $pdf = $this->pdf->load_wide();
            if (isset($header) && !empty($header)) {
                $pdf->setAutoTopMargin = 'stretch';
                $pdf->SetHeader($header);
            }
            if (isset($footer) && !empty($footer)) {
                $pdf->setAutoBottomMargin = 'stretch';
                $pdf->SetFooter($footer); // Add a footer for good measure ;)
            }
            $pdf->WriteHTML($report_html); // write the HTML into the PDF    
            $pdf->Output($pdfFilePath, \Mpdf\Output\Destination::FILE); // save to file 
            return $filename_report;
        } else {
            return false;
        }
    }



    public function download($file_data = NULL)
    {
        $this->load->helper('download');
        if ($file_data) {
            $file = REPORTS_FOLDER_PATH . $file_data;
            if (file_exists($file)) {
                $data = file_get_contents($file);
                force_download($file_data, $data);
            } else {
                redirect(base_url());
            }
        }
    }

    public function get_type_name($type)
    {
        switch ($type) {
            case 1:
                $type_name = 'Loose Packing';
                break;
            case 2:
                $type_name = 'Specimen';
                break;
            case 3:
                $type_name = 'OH Packing';
                break;
        }
        return $type_name;
    }
}
